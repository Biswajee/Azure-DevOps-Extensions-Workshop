trigger:
  # start a new build for every push if false (default)
  batch: true
  branches:
    # the build pipeline will be triggered for the following branches only
    include:
      - master
      - develop
      - feature/*
  paths:
    # the build pipeline will be triggered when a change is observed in following directories/files
    include:
      - src/*
      - az-build-and-release-pipeline.yaml

variables:
  # Directory that contains our code
  codeDirectory: $(Build.SourcesDirectory)/src
  # Extension information
  extensionId: "Global-Extension"
  publisherId: "tcs-workshop-demo-extension"
  extensionName: "Global Extension"
  artifactName: "Global-Extension"

stages:
    - stage: Test
      displayName: Test
      jobs:
        - job: Test
          strategy:
            matrix:
              ubuntu14:
                containerImage: ubuntu:16.04
              ubuntu16:
                containerImage: ubuntu:18.04
              ubuntu18:
                containerImage: ubuntu:20.04
          steps:
            - bash: make ni
              displayName: Install Dependencies
            - bash: make t
              displayName: Run tests

    - stage: Package
      displayName: Package
      jobs:
      - job: Package
        steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '10.x'
        - task: TfxInstaller@3
          inputs:
            version: 'v0.9.x'
        - task: Npm@1
          inputs:
            command: 'install'
            workingDir: '$(codeDirectory)'
        - task: Npm@1
          inputs:
            command: 'custom'
            workingDir: '$(codeDirectory)'
            customCommand: 'run restore'
        - task: PackageAzureDevOpsExtension@3
          inputs:
            rootFolder: '$(codeDirectory)'
            localizationRoot: '$(codeDirectory)'
            outputPath: '$(Build.ArtifactStagingDirectory)/Extension'
            publisherId: '$(publisherId)'
            extensionId: '$(extensionId)'
            extensionName: '$(extensionName)'
            updateTasksVersion: true
            updateTasksId: true
            extensionVisibility: 'private'
        - task: PublishPipelineArtifact@1
          displayName: Publish artifact $(artifactName)
          inputs:
            targetPath: '$(Build.ArtifactStagingDirectory)/Extension'
            artifactName: '$(artifactName)'

    - stage: Release
      displayName: Production
      dependsOn: [ Test, Package ]
      pool:
        vmImage: ubuntu-20.04
      condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))
      jobs:
      - job: Release
        steps:
        - task: DownloadPipelineArtifact@2
          inputs:
            buildType: 'current'
            artifactName: $(artifactName)
            targetPath: '$(Pipeline.Workspace)'
        - task: TfxInstaller@3
          inputs:
            version: 'v0.9.x'
        