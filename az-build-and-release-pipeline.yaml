trigger:
  # start a new build for every push if false (default)
  batch: true
  branches:
    # the build pipeline will be triggered for the following branches only
    include:
      - master
      - develop
      - feature/*
  paths:
    # the build pipeline will be triggered when a change is observed in following directories/files
    include:
      - src/*
      - az-build-and-release-pipeline.yaml

pool:
  vmImage: ubuntu-20.04

variables:
  # Directory that contains our code
  codeDirectory: $(Build.SourcesDirectory)/src
  # Extension information
  extensionId: "Global-Extension"
  publisherId: "Biswajitr"
  extensionName: "Global Extension"
  artifactName: "Global-Extension"
  shareWithOrganization: "Biswajitr,TCSTechCommWorkshop"
  shareWithOrganization.URLs: "https://dev.azure.com/biswajitr,https://dev.azure.com/TCSTechCommWorkshop"
  marketplaceServiceConnectionName: "Extension-Marketplace"

stages:
    - stage: Test
      displayName: Test
      jobs:
        - job: Test
          steps:
            - bash: make ni
              displayName: Install Dependencies
            - bash: make t
              displayName: Run tests

    - stage: Package
      displayName: Package
      dependsOn: [ Test ]
      jobs:
      - job: Package
        steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '10.x'

        - task: TfxInstaller@3
          inputs:
            version: 'v0.9.x'

        - task: Npm@1
          inputs:
            command: 'install'
            workingDir: $(codeDirectory)

        - task: Npm@1
          inputs:
            command: 'custom'
            workingDir: $(codeDirectory)
            customCommand: 'run restore'

        - task: PackageAzureDevOpsExtension@3
          inputs:
            rootFolder: '$(codeDirectory)'
            localizationRoot: '$(codeDirectory)'
            outputPath: '$(Build.ArtifactStagingDirectory)/Extension'
            publisherId: '$(publisherId)'
            extensionId: '$(extensionId)'
            extensionName: '$(extensionName)'
            updateTasksVersion: true
            updateTasksId: true
            extensionVisibility: 'private'
            extensionPricing: 'free'
        - task: PublishPipelineArtifact@1
          displayName: Publish artifact $(artifactName)
          inputs:
            targetPath: '$(Build.ArtifactStagingDirectory)/Extension'
            artifactName: '$(artifactName)'

    - stage: Release
      displayName: Production
      dependsOn: [ Test, Package ]
      condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))
      jobs:
      - job: Release
        steps:
        - task: DownloadPipelineArtifact@2
          inputs:
            buildType: 'current'
            artifactName: $(artifactName)
            targetPath: '$(Pipeline.Workspace)/Extension'

        - task: TfxInstaller@3
          inputs:
            version: 'v0.9.x'

        - task: PublishAzureDevOpsExtension@3
          displayName: Publish Extension to marketplace
          inputs:
            connectTo: 'VsTeam'
            connectedServiceName: $(marketplaceServiceConnectionName)
            fileType: 'vsix'
            vsixFile: '$(Pipeline.Workspace)/Extension/*.vsix'
            publisherId: $(publisherId)
            extensionId: $(extensionId)
            extensionName: $(extensionName)
            extensionVersion: '1.0.$(Build.BuildNumber)'
            updateTasksVersion: true
            updateTasksVersionType: 'minor'
            extensionVisibility: 'private'
            extensionPricing: 'free'

        - task: ShareAzureDevOpsExtension@3
          inputs:
            connectTo: 'VsTeam'
            connectedServiceName: 'Extension-Marketplace'
            method: 'id'
            publisherId: '$(publisherId)'
            extensionId: '$(extensionId)'
            accounts: '$(shareWithOrganization)'

    - stage: Install
      displayName: Install Extension in ORG
      dependsOn: [ Release ]
      condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))
      jobs:
        - job: Install
          displayName: Install Extension in Org
          steps:
          - task: TfxInstaller@3
            inputs:
              version: 'v0.9.x'

          - task: InstallAzureDevOpsExtension@3
            displayName: Install Extension from marketplace
            inputs:
              connectTo: 'VsTeam'
              connectedServiceName: $(marketplaceServiceConnectionName)
              publisherId: $(publisherId)
              extensionId: $(extensionId)
              accounts: $(shareWithOrganization.URLs)